!function(){"use strict";window._attachmentTaxonomiesExtendMediaLibrary=function(t,e,o){t.view.AttachmentFilters.Taxonomy=t.view.AttachmentFilters.extend({id:"media-attachment-taxonomy-filters",createFilters:function(){const t={};if(this.options.queryVar&&this.options.allLabel&&(t.all={text:this.options.allLabel,props:{},priority:1},t.all.props[this.options.queryVar]=null,this.options.terms&&this.options.terms.length))for(const e in this.options.terms)t[this.options.terms[e].slug]={text:this.options.terms[e].name,props:{},priority:e+2},t[this.options.terms[e].slug].props[this.options.queryVar]=this.options.terms[e].slug;this.filters=t}}),t.view.AttachmentsBrowser=function(t,e,o,i){return t.extend({createToolbar:function(){t.__super__.createToolbar.apply(this,arguments);const s=i.data;for(const t in s)this.toolbar.set(s[t].slug+"FilterLabel",new o({value:i.l10n.filterBy[s[t].slug],attributes:{for:"media-attachment-"+s[t].slugId+"-filters"},priority:-72}).render()),this.toolbar.set(s[t].slug+"Filter",new e({controller:this.controller,model:this.collection.props,priority:-72,queryVar:s[t].queryVar,terms:s[t].terms,id:"media-attachment-"+s[t].slugId+"-filters",allLabel:i.l10n.all[s[t].slug]}).render())}})}(t.view.AttachmentsBrowser,t.view.AttachmentFilters.Taxonomy,t.view.Label,o),e(document).on("change",".attachment-taxonomy-select > select",(function(t){const o=[];for(const e in t.target.options)t.target.options[e].selected&&o.push(t.target.options[e].value);e(t.target).parent().prev(".attachment-taxonomy-input").find("input").val(o.join(",")).trigger("change")}))}}();