!function(){"use strict";window._attachmentTaxonomiesExtendMediaLibrary=function(t,e,o){t.view.AttachmentFilters.Taxonomy=t.view.AttachmentFilters.extend({id:"media-attachment-taxonomy-filters",createFilters:function(){const t={};if(this.options.queryVar&&this.options.allLabel&&(t.all={text:this.options.allLabel,props:{},priority:1},t.all.props[this.options.queryVar]=null,this.options.terms&&this.options.terms.length))for(const e in this.options.terms)t[this.options.terms[e].slug]={text:this.options.terms[e].name,props:{},priority:e+2},t[this.options.terms[e].slug].props[this.options.queryVar]=this.options.terms[e].slug;this.filters=t}}),t.view.AttachmentsBrowser=function(t,e,o,s){return t.extend({createToolbar:function(){t.__super__&&t.__super__.createToolbar?t.__super__.createToolbar.apply(this,arguments):t.prototype.createToolbar.apply(this,arguments);const r=this.controller.state();if(r.id&&"gallery-edit"===r.id)return;const i=s.data;for(const t in i)this.toolbar.set(i[t].slug+"FilterLabel",new o({value:s.l10n.filterBy[i[t].slug],attributes:{for:"media-attachment-"+i[t].slugId+"-filters"},priority:-72}).render()),this.toolbar.set(i[t].slug+"Filter",new e({controller:this.controller,model:this.collection.props,priority:-72,queryVar:i[t].queryVar,terms:i[t].terms,id:"media-attachment-"+i[t].slugId+"-filters",allLabel:s.l10n.all[i[t].slug]}).render())}})}(t.view.AttachmentsBrowser,t.view.AttachmentFilters.Taxonomy,t.view.Label,o),e(document).on("change",".setting[data-controls-attachment-taxonomy-setting] > select",(function(t){const o=[];for(const e in t.target.options)t.target.options[e].selected&&o.push(t.target.options[e].value);const s=e(t.target).parent(),r=s.attr("data-controls-attachment-taxonomy-setting");s.parent().find(`.setting[data-setting=${r}] > input`).val(o.join(",")).trigger("change")}))}}();